{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "serviceBusNamespaceName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Service Bus namespace"
      }
    },
    "serviceBusTopicName": {
      "type": "string",
      "metadata": {
        "description": "Name of Service Bus topic to create within the namespace"
      }
    },
    "serviceBusSubscriptions": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Names of Service Bus subscriptions to create within the topic"
      }
    },
    "serviceBusTopicProperties": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Custom properties to use when creating the topic"
      }
    },
    "serviceBusSubscriptionProperties": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Custom properties to use when creating the subscriptions"
      }
    }
  },
  "variables": {
    "deploySubscriptions": "[greater(length(parameters('serviceBusSubscriptions')), 0)]",
    "emptyObject": {},
    "customTopicProperties": {
      "defaultMessageTimeToLive": "[if(empty(parameters('serviceBusTopicProperties')), '', parameters('serviceBusTopicProperties').defaultMessageTimeToLive)]",
      "maxSizeInMegabytes": "[if(empty(parameters('serviceBusTopicProperties')), '', parameters('serviceBusTopicProperties').maxSizeInMegabytes)]",
      "requiresDuplicateDetection": false,
      "duplicateDetectionHistoryTimeWindow": "[if(empty(parameters('serviceBusTopicProperties')), '', parameters('serviceBusTopicProperties').duplicateDetectionHistoryTimeWindow)]",
      "enableBatchedOperations": true,
      "status": "Active",
      "supportOrdering": true,
      "autoDeleteOnIdle": "[if(empty(parameters('serviceBusTopicProperties')), '', parameters('serviceBusTopicProperties').autoDeleteOnIdle)]",
      "enablePartitioning": false,
      "enableExpress": false
    },
    "customSubscriptionProperties": {
      "lockDuration": "[if(empty(parameters('serviceBusSubscriptionProperties')), '', parameters('serviceBusSubscriptionProperties').lockDuration)]",
      "requiresSession": false,
      "defaultMessageTimeToLive": "[if(empty(parameters('serviceBusSubscriptionProperties')), '', parameters('serviceBusSubscriptionProperties').defaultMessageTimeToLive)]",
      "deadLetteringOnMessageExpiration": false,
      "deadLetteringOnFilterEvaluationExceptions": true,
      "maxDeliveryCount": "[if(empty(parameters('serviceBusSubscriptionProperties')), '', parameters('serviceBusSubscriptionProperties').maxDeliveryCount)]",
      "status": "Active",
      "enableBatchedOperations": true,
      "autoDeleteOnIdle": "[if(empty(parameters('serviceBusSubscriptionProperties')), '', parameters('serviceBusSubscriptionProperties').autoDeleteOnIdle)]"
    }
  },
  "resources": [
    {
      "apiVersion": "2017-04-01",
      "name": "[concat(parameters('serviceBusNamespaceName'), '/', parameters('serviceBusTopicName'))]",
      "type": "Microsoft.ServiceBus/namespaces/topics",
      "properties": "[if(empty(parameters('serviceBusTopicProperties')), variables('emptyObject'), variables('customTopicProperties'))]"
    },
    {
      "apiVersion": "2017-04-01",
      "condition": "[variables('deploySubscriptions')]",
      "name": "[concat(parameters('serviceBusNamespaceName'), '/', if(variables('deploySubscriptions'), concat(parameters('serviceBusTopicName'), '/', parameters('serviceBusSubscriptions')[copyIndex()]), 'placeholder/placeholder'))]",
      "type": "Microsoft.ServiceBus/namespaces/topics/subscriptions",
      "copy": {
        "name": "sbSubscriptionCopy",
        "count": "[if(variables('deploySubscriptions'), length(parameters('serviceBusSubscriptions')), 1)]"
      },
      "properties": "[if(empty(parameters('serviceBusSubscriptionProperties')), variables('emptyObject'), variables('customSubscriptionProperties'))]",
      "dependsOn": [
        "[parameters('serviceBusTopicName')]"
      ]
    }
  ],
  "outputs": {
  }
}

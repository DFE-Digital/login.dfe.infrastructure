{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "templatesBaseUri": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/DFE-Digital/login.dfe.infrastructure/master/"
    },
    "virtualNetworkName": {
      "type": "string",
      "metadata": {
        "description": "The name of the virtual network."
      }
    },
    "virtualNetworkAddressSpacePrefix": {
      "type": "string",
      "defaultValue": "10.0",
      "metadata": {
        "description": "Prefix address space of the Vnet"
      }
    },
    "virtualNetworkAddressSpaceCIDR": {
      "type": "string",
      "defaultValue": "/16",
      "metadata": {
        "description": "The CIDR notation of the Vnet address space"
      }
    },
    "virtualNetworkDeploy": {
      "type": "string",
      "defaultValue": "Disabled",
      "allowedValues": [
        "Disabled",
        "Enabled"
      ],
      "metadata": {
        "description": "Deploys the Virtual Network and deletes all subnets if Enabled https://github.com/Azure/azure-quickstart-templates/issues/2786"
      }
    },
    "subnetAddressSpaceCIDR": {
      "type": "string",
      "defaultValue": "/24",
      "metadata": {
        "description": "The CIDR notation of the subnet address space"
      }
    },
    "gatewaySubnetNamePrefix": {
      "type": "string",
      "defaultValue": "gw-sn",
      "metadata": {
        "description": "The prefix used for naming new gateway subnets."
      }
    },
    "gatewaySubnetCount": {
      "type": "int",
      "defaultValue": 0,
      "maxValue": 5,
      "metadata": {
        "description": "The number of gateway subnets to provision"
      }
    },
    "managementSubnetNamePrefix": {
      "type": "string",
      "defaultValue": "mgmt-sn",
      "metadata": {
        "description": "The prefix used for naming new management subnets."
      }
    },
    "managementSubnetCount": {
      "type": "int",
      "defaultValue": 0,
      "maxValue": 5,
      "metadata": {
        "description": "The number of management subnets to provision"
      }
    },
    "frontendSubnetNamePrefix": {
      "type": "string",
      "defaultValue": "sharedfe-sn",
      "metadata": {
        "description": "The prefix used for naming new shared frontend app subnets."
      }
    },
    "frontendSubnetCount": {
      "type": "int",
      "defaultValue": 0,
      "maxValue": 5,
      "metadata": {
        "description": "The number of shared frontend app subnets to provision"
      }
    },
    "backendSubnetNamePrefix": {
      "type": "string",
      "defaultValue": "sharedbe-sn",
      "metadata": {
        "description": "The prefix used for naming new shared backend app subnets."
      }
    },
    "backendSubnetCount": {
      "type": "int",
      "defaultValue": 0,
      "maxValue": 5,
      "metadata": {
        "description": "The number of shared backend app subnets to provision."
      }
    },
    "redisSubnetNamePrefix": {
      "type": "string",
      "defaultValue": "redis-sn",
      "metadata": {
        "description": "The prefix used for naming new shared backend app subnets."
      }
    },
    "redisSubnetCount": {
      "type": "int",
      "defaultValue": 0,
      "maxValue": 5,
      "metadata": {
        "description": "The number of shared backend app subnets to provision."
      }
    },
    "appSubnets": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Names of additional subnets to create for applications"
      }
    },
    "serviceEndpointList": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "A list of service endpoints to configure on the subnets provisioned in the vnet."
      }
    },
    "firewallsNsgName": {
      "type": "string",
      "defaultValue": "Disabled",
      "metadata": {
        "description": "Name of the firewall NSG to be associated to the gateway subnet gw-sn-0"
      }
    },
    "firewallsResourceGroup": {
      "type": "string",
      "defaultValue": "Disabled",
      "metadata": {
        "description": "Name of the Resource Group where the firewall NSG resides, used for the resourceId function to get the firewall NSG resource"
      }
    }
  },
  "variables": {
    "virtualNetworkTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/virtual-network.json')]",
    "subnetTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/subnet.json')]",
    "emptyArray": [],
    "emptyObject": {},
    "firewallNsgId": {
      "id": "[if(not(bool(equals(parameters('firewallsNsgName'),'Disabled'))), resourceId(parameters('firewallsResourceGroup'), 'Microsoft.Network/networkSecurityGroups', parameters('firewallsNsgName')),'')]"
    },
    "subnetDelegations": [
      {
        "name": "webapp",
        "properties": {
          "serviceName": "Microsoft.Web/serverFarms",
          "actions": [
            "Microsoft.Network/virtualNetworks/subnets/action"
          ]
        }
      }
    ],
    "copy": [
      {
        "name": "gatewaySubnetCopy",
        "count": "[if(greater(parameters('gatewaySubnetCount'), 0), parameters('gatewaySubnetCount'), 1)]",
        "input": {
          "name": "[concat(parameters('gatewaySubnetNamePrefix'), '-', copyIndex('gatewaySubnetCopy'))]",
          "properties": {
            "addressPrefix": "[blocks.getNextAddressRange(parameters('virtualNetworkAddressSpacePrefix'), 0, copyIndex('gatewaySubnetCopy'), parameters('subnetAddressSpaceCIDR'))]",
            "serviceEndpointList": "[parameters('serviceEndpointList')]",
            "delegations": "[variables('emptyArray')]",
            "networkSecurityGroup": "[if(and(not(bool(equals(parameters('firewallsNsgName'),'Disabled'))), bool(equals(copyIndex('gatewaySubnetCopy'), 0))), variables('firewallNsgId'), json('null'))]",
            "routeTable": "[variables('emptyObject')]"
          }
        }
      },
      {
        "name": "managementSubnetCopy",
        "count": "[if(greater(parameters('managementSubnetCount'), 0), parameters('managementSubnetCount'), 1)]",
        "input": {
          "name": "[concat(parameters('managementSubnetNamePrefix'), '-', copyIndex('managementSubnetCopy'))]",
          "properties": {
            "addressPrefix": "[blocks.getNextAddressRange(parameters('virtualNetworkAddressSpacePrefix'), 5, copyIndex('managementSubnetCopy'), parameters('subnetAddressSpaceCIDR'))]",
            "serviceEndpointList": "[variables('emptyArray')]",
            "delegations": "[variables('emptyArray')]",
            "networkSecurityGroup": "[variables('emptyObject')]",
            "routeTable": "[variables('emptyObject')]"
          }
        }
      },
      {
        "name": "redisSubnetCopy",
        "count": "[if(greater(parameters('redisSubnetCount'), 0), parameters('redisSubnetCount'), 1)]",
        "input": {
          "name": "[concat(parameters('redisSubnetNamePrefix'), '-', copyIndex('redisSubnetCopy'))]",
          "properties": {
            "addressPrefix": "[blocks.getNextAddressRange(parameters('virtualNetworkAddressSpacePrefix'), 10, copyIndex('redisSubnetCopy'), parameters('subnetAddressSpaceCIDR'))]",
            "serviceEndpointList": "[variables('emptyArray')]",
            "delegations": "[variables('emptyArray')]",
            "networkSecurityGroup": "[variables('emptyObject')]",
            "routeTable": "[variables('emptyObject')]"
          }
        }
      },
      {
        "name": "frontendSubnetCopy",
        "count": "[if(greater(parameters('frontendSubnetCount'), 0), parameters('frontendSubnetCount'), 1)]",
        "input": {
          "name": "[concat(parameters('frontendSubnetNamePrefix'), '-', copyIndex('frontendSubnetCopy'))]",
          "properties": {
            "addressPrefix": "[blocks.getNextAddressRange(parameters('virtualNetworkAddressSpacePrefix'), 15, copyIndex('frontendSubnetCopy'), parameters('subnetAddressSpaceCIDR'))]",
            "serviceEndpointList": "[parameters('serviceEndpointList')]",
            "delegations": "[variables('subnetDelegations')]",
            "networkSecurityGroup": "[variables('emptyObject')]",
            "routeTable": "[variables('emptyObject')]"
          }
        }
      },
      {
        "name": "backendSubnetCopy",
        "count": "[if(greater(parameters('backendSubnetCount'), 0), parameters('backendSubnetCount'), 1)]",
        "input": {
          "name": "[concat(parameters('backendSubnetNamePrefix'), '-', copyIndex('backendSubnetCopy'))]",
          "properties": {
            "addressPrefix": "[blocks.getNextAddressRange(parameters('virtualNetworkAddressSpacePrefix'), 20, copyIndex('backendSubnetCopy'), parameters('subnetAddressSpaceCIDR'))]",
            "serviceEndpointList": "[parameters('serviceEndpointList')]",
            "delegations": "[variables('subnetDelegations')]",
            "networkSecurityGroup": "[variables('emptyObject')]",
            "routeTable": "[variables('emptyObject')]"
          }
        }
      },
      {
        "name": "appSubnetCopy",
        "count": "[if(empty(parameters('appSubnets')), 0, length(parameters('appSubnets')))]",
        "input": {
          "name": "[concat(parameters('appSubnets')[copyIndex('appSubnetCopy')], '-sn')]",
          "properties": {
            "addressPrefix": "[blocks.getNextAddressRange(parameters('virtualNetworkAddressSpacePrefix'), 30, copyIndex('appSubnetCopy'), parameters('subnetAddressSpaceCIDR'))]",
            "serviceEndpointList": "[parameters('serviceEndpointList')]",
            "delegations": "[variables('subnetDelegations')]",
            "networkSecurityGroup": "[variables('emptyObject')]",
            "routeTable": "[variables('emptyObject')]"
          }
        }
      }
    ],
    "gatewaySubnet": "[if(greater(parameters('gatewaySubnetCount'), 0), variables('gatewaySubnetCopy'), variables('emptyArray'))]",
    "frontendSubnet": "[if(greater(parameters('frontendSubnetCount'), 0), variables('frontendSubnetCopy'), variables('emptyArray'))]",
    "backendSubnet": "[if(greater(parameters('backendSubnetCount'), 0), variables('backendSubnetCopy'), variables('emptyArray'))]",
    "redisSubnet": "[if(greater(parameters('redisSubnetCount'), 0), variables('redisSubnetCopy'), variables('emptyArray'))]",
    "appSubnet": "[if(greater(length(parameters('appSubnets')), 0), variables('appSubnetCopy'), variables('emptyArray'))]",
    "subnetConfiguration": "[concat(variables('managementSubnetCopy'), variables('gatewaySubnet'), variables('frontendSubnet'), variables('backendSubnet'), variables('redisSubnet'), variables('appSubnet'))]"
  },
  "functions": [
    {
      "namespace": "blocks",
      "members": {
        "getNextAddressRange": {
          "parameters": [
            {
              "name": "networkPrefix",
              "type": "string"
            },
            {
              "name": "networkStartingAddress",
              "type": "int"
            },
            {
              "name": "index",
              "type": "int"
            },
            {
              "name": "mask",
              "type": "string"
            }
          ],
          "output": {
            "type": "string",
            "value": "[concat(parameters('networkPrefix'), '.' , add(parameters('networkStartingAddress'), parameters('index')) ,'.0', parameters('mask'))]"
          }
        }
      }
    }
  ],
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "vnet",
      "condition": "[equals(parameters('virtualNetworkDeploy'), 'Enabled')]",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('virtualNetworkTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "armVnetName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "armVnetAddressSpaceCIDR": {
            "value": "[blocks.getNextAddressRange(parameters('virtualNetworkAddressSpacePrefix'), 0, 0, parameters('virtualNetworkAddressSpaceCIDR'))]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "[concat('subnet-', variables('subnetConfiguration')[copyIndex()].name)]",
      "type": "Microsoft.Resources/deployments",
      "dependsOn": [
        "vnet"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('subnetTemplateUri')]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "virtualNetworkName": {
            "value": "[parameters('virtualNetworkName')]"
          },
          "subnetName": {
            "value": "[variables('subnetConfiguration')[copyIndex()].name]"
          },
          "subnetAddressPrefix": {
            "value": "[variables('subnetConfiguration')[copyIndex()].properties.addressPrefix]"
          },
          "serviceEndpointList": {
            "value": "[variables('subnetConfiguration')[copyIndex()].properties.serviceEndpointList]"
          },
          "delegations": {
            "value": "[variables('subnetConfiguration')[copyIndex()].properties.delegations]"
          },
          "networkSecurityGroup": {
            "value": "[if(empty(variables('subnetConfiguration')[copyIndex()].properties.networkSecurityGroup), variables('emptyObject'), variables('subnetConfiguration')[copyIndex()].properties.networkSecurityGroup)]"
          },
          "routeTable": {
            "value": "[if(empty(variables('subnetConfiguration')[copyIndex()].properties.routeTable), variables('emptyObject'), variables('subnetConfiguration')[copyIndex()].properties.routeTable)]"
          }
        }
      },
      "copy": {
        "name": "subnet-copy",
        "count": "[length(variables('subnetConfiguration'))]",
        "mode": "Serial"
      }
    }
  ],
  "outputs": {
    "backendSubnetConfiguration": {
      "type": "array",
      "value": "[variables('backendSubnet')]"
    },
    "appSubnetConfiguration": {
      "type": "array",
      "value": "[variables('appSubnet')]"
    }
  }
}

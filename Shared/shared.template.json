{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "templatesBaseUri": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/DFE-Digital/login.dfe.infrastructure/master/"
    },
    "appServicePlanName": {
      "type": "string"
    },
    "appServicePlanSku": {
      "type": "object",
      "metadata": {
        "description": "The SKU of the App Service Plan"
      }
    },
    "appServicePlanOS": {
      "type": "string",
      "metadata": {
        "description": "Windows or Linux App Service Plan"
      }
    },
    "appServicePlanIsLinux": {
      "type": "bool",
      "metadata": {
        "description": "Whether the App Service Plan is Linux or not"
      }
    },
    "appInsightsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the application insights resource"
      }
    },
    "redisCacheName": {
      "type": "string"
    },
    "redisCacheSku": {
      "type": "object",
      "defaultValue": "",
      "metadata": {
        "description": ""
      }
    },
    "sqlAdministratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The admin user of the SQL Server"
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the admin user of the SQL Server"
      }
    },
    "sqlserverName": {
      "type": "string",
      "metadata": {
        "description": "The name of the SQL Server"
      }
    },
    "elasticPoolName": {
      "type": "string",
      "metadata": {
        "description": "The name of the SQL Elastic Pool"
      }
    },
    "databaseNames": {
      "type": "array",
      "metadata": {
        "description": "Azure DevOps variable format: [{\"name\":\"temp-signin-audit-db\",\"maxSizeBytes\":\"1073741824\"} N.B. use without backslash"
      }
    },
    "transparentDataEncryption": {
      "type": "string",
      "metadata": {
        "description": "Enable or disable Transparent Data Encryption (TDE) for the database."
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account resource"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Key Vault resource"
      }
    },
    "AccessPolicyObjectIds": {
      "type": "array",
      "metadata": {
        "description": "ObjectIDs for the Keyvault Access Policy"
      }
    },
    "azureSearchName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Search resource"
      }
    },
    "azureCdnName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Cdn Profile resource"
      }
    },
    "cdnEndpointName": {
      "type": "string"
    },
    "cdnProfileName": {
      "type": "string"
    },
    "originName": {
      "defaultValue": "",
        "type": "string"
    },
    "originHostname": {
      "type": "string"
    },
    "customDomainName": {
      "defaultValue": "",
      "type": "string"
    },
    "CHGWIP": {
      "type": "string",
      "metadata": {
        "description": "Firewall IP"
      }
    },
    "postgresServerName": {
      "type": "string",
      "metadata": {
        "description": "Name of the postgres server"
      }
    },
    "postgresSku": {
      "type": "object",
      "defaultValue": "",
      "metadata": {
        "description": "SKU for the postgres server"
      }
    },
    "postgresAdminLogin": {
      "type": "string",
      "metadata": {
        "description": "Admin username for the postgres server"
      }
    },
    "postgresAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password for the postgres server"
      }
    },
    "postgresVersion": {
      "type": "string",
      "metadata": {
        "description": "Version of the postgres server"
      }
    },
    "postgresDatabases": {
      "type": "array",
      "metadata": {
        "description": "Array of database names to create within the postgres server"
      }
    },
    "keyvaultCertificateNames": {
      "type": "array",
      "metadata": {
        "description": "Names of the certificates stored in keyvault"
      }
    },
    "elasticPoolProperties": {
      "type": "object",
      "defaultValue": "",
      "metadata": {
        "description": "Properties for the elastic pool"
      }
    }
  },
  "variables": {
    "redisTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/redis-cache.json')]",
    "appServicePlanTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/app-service-plan.json')]",
    "azureSQLTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/azure-sql.json')]",
    "databaseTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/database.json')]",
    "appInsightsTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/app-insights.json')]",
    "storageAccountTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/storage-account.json')]",
    "keyVaultTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/key-vault.json')]",
    "azureSearchTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/azure-search.json')]",
    "postgresTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/postgres.json')]",
    "azureCdnTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/azure-cdn.json')]",
    "azureCdnEndpointTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/azure-cdn-endpoint.json')]",
    "certificateTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/app-service-certificate.json')]"
  },
  "resources": [{
      "apiVersion": "2017-05-10",
      "name": "AppServicePlan",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('appServicePlanTemplateUri')]"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[parameters('appServicePlanName')]"
          },
          "appServicePlanSku": {
            "value": "[parameters('appServicePlanSku')]"
          },
          "appServicePlanOS": {
            "value": "[parameters('appServicePlanOS')]"
          },
          "appServicePlanIsLinux": {
            "value": "[parameters('appServicePlanIsLinux')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "RedisCache",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('redisTemplateUri')]"
        },
        "parameters": {
          "redisCacheName": {
            "value": "[parameters('redisCacheName')]"
          },
          "redisCacheSku": {
            "value": "[parameters('redisCacheSku')]"
          }
        }
      }
    },
    {
      "name": "SQLServer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('azureSQLTemplateUri')]"
        },
        "parameters": {
          "sqlAdministratorLogin": {
            "value": "[parameters('sqlAdministratorLogin')]"
          },
          "sqlAdministratorLoginPassword": {
            "value": "[parameters('sqlAdministratorLoginPassword')]"
          },
          "sqlserverName": {
            "value": "[parameters('sqlserverName')]"
          },
          "elasticPoolName": {
            "value": "[parameters('elasticPoolName')]"
          },
          "CHGWIP": {
            "value": "[parameters('CHGWIP')]"
          },
          "elasticPoolProperties": {
            "value": "[parameters('elasticPoolProperties')]"
          }
        }
      }
    },
    {
      "name": "[parameters('databaseNames')[copyIndex()].name]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('databaseTemplateUri')]"
        },
        "parameters": {
          "databaseName": {
            "value": "[parameters('databaseNames')[copyIndex()].name]"
          },
          "transparentDataEncryption": {
            "value": "[parameters('transparentDataEncryption')]"
          },
          "sqlserverName": {
            "value": "[parameters('sqlserverName')]"
          },
          "elasticPoolName": {
            "value": "[parameters('elasticPoolName')]"
          },
          "databaseMaxSizeByes": {
            "value": "[parameters('databaseNames')[copyIndex()].maxSizeBytes]"
          }
        }
      },
      "copy": {
        "name": "databasecopy",
        "count": "[length(parameters('databaseNames'))]",
        "mode": "Serial"
      },
      "dependsOn": [
        "SQLServer"
      ]
    },
    {
      "name": "AppInsights",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('appInsightsTemplateUri')]"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[parameters('appInsightsName')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "name": "StorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountTemplateUri')]"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "name": "KeyVault",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('keyVaultTemplateUri')]"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "AccessPolicyObjectIds": {
            "value": "[parameters('AccessPolicyObjectIds')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "name": "AzureSearch",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('azureSearchTemplateUri')]"
        },
        "parameters": {
          "azureSearchName": {
            "value": "[parameters('azureSearchName')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "name": "Postgres",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('postgresTemplateUri')]"
        },
        "parameters": {
          "postgresServerName": {
            "value": "[parameters('postgresServerName')]"
          },
          "postgresSku": {
            "value": "[parameters('postgresSku')]"
          },
          "postgresAdminLogin": {
            "value": "[parameters('postgresAdminLogin')]"
          },
          "postgresAdminPassword": {
            "value": "[parameters('postgresAdminPassword')]"
          },
          "postgresVersion": {
            "value": "[parameters('postgresVersion')]"
          },
          "postgresDatabases": {
            "value": "[parameters('postgresDatabases')]"
          }
        }
      }
    },
    {
      "name": "AzureCDN",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('azureCdnTemplateUri')]"
        },
        "parameters": {
          "cdnProfileName": {
            "value": "[parameters('azureCdnName')]"
          }
        }
      }
    },
    {
      "name": "AzureCDNEndpoint",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2019-03-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('azureCdnEndpointTemplateUri')]"
        },
        "parameters": {
          "cdnEndpointName": {
            "value": "[parameters('cdnEndpointName')]"
          },
          "cdnProfileName": {
            "value": "[parameters('cdnProfileName')]"
          },
          "originName": {
            "value": "[parameters('originName')]"
          },
          "originHostname": {
            "value": "[parameters('originHostname')]"
          },
          "customDomainName": {
            "value": "[parameters('customDomainName')]"
          }
        }
      },
      "dependsOn": [
        "StorageAccount",
        "AzureCDN"
      ]
    },
    {
      "name": "[concat('AppServiceCertificates', copyIndex())]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('certificateTemplateUri')]"
        },
        "parameters": {
          "keyVaultCertificateName": {
            "value": "[parameters('keyvaultCertificateNames')[copyIndex()]]"
          },
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "keyVaultResourceGroup": {
            "value": "[resourceGroup().name]"
          }
        }
      },
      "copy": {
        "name": "certCopy",
        "count": "[length(parameters('keyvaultCertificateNames'))]"
      },
      "dependsOn": [
        "KeyVault"
      ]
    }
  ],
  "outputs": {}
}

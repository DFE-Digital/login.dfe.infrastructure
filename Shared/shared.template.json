{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "templatesBaseUri": {
      "type": "string",
      "defaultValue": "https://raw.githubusercontent.com/DFE-Digital/login.dfe.infrastructure/master/"
    },
    "appServicePlanName": {
      "type": "string"
    },
    "appServicePlanSku": {
      "type": "object",
      "defaultValue": {
        "name": "S2",
        "tier": "Standard",
        "size": "S2",
        "family": "S",
        "capacity": 1
      }
    },
    "appServicePlanOS": {
      "type": "string",
      "metadata": {
        "description": "Windows or Linux"
      }
    },
    "appServicePlanIsLinux": {
      "type": "bool",
      "metadata": {
        "description": "Whether the App Service Plan is Linux or not"
      }
    },
    "appInsightsName": {
      "type": "string",
      "metadata": {
        "description": "Name of the application insights resource"
      }
    },
    "redisCacheName": {
      "type": "string"
    },
    "redisCacheSku": {
      "type": "object",
      "defaultValue": {
        "name": "Standard",
        "family": "C",
        "capacity": 1
      }
    },
    "sqlAdministratorLogin": {
      "type": "string",
      "metadata": {
        "description": "The admin user of the SQL Server"
      }
    },
    "sqlAdministratorLoginPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password of the admin user of the SQL Server"
      }
    },
    "sqlserverName": {
      "type": "string",
      "metadata": {
        "description": "The name of the SQL Server"
      }
    },
    "elasticPoolName": {
      "type": "string",
      "metadata": {
        "description": "The name of the SQL Elastic Pool"
      }
    },
    "databaseNames": {
      "type": "array"
    },
    "transparentDataEncryption": {
      "type": "string",
      "allowedValues": [
        "Enabled",
        "Disabled"
      ],
      "defaultValue": "Enabled",
      "metadata": {
        "description": "Enable or disable Transparent Data Encryption (TDE) for the database."
      }
    },
    "storageAccountName": {
      "type": "string",
      "metadata": {
        "description": "Name of the storage account resource"
      }
    },
    "storageAccountType": {
      "type": "string",
      "defaultValue": "Standard_RAGRS",
      "metadata": {
        "description": "Type of storage account to use"
      }
    },
    "keyVaultName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Key Vault resource"
      }
    },
    "AccessPolicyObjectId": {
      "type": "string",
      "metadata": {
        "description": "ObjectID for the Access Policy"
      }
    },
    "azureSearchName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Azure Search resource"
      }
    },
    "EPGWIP": {
      "type": "string",
      "metadata": {
        "description": "Firewall IP"
      }
    },
    "CHGWIP": {
      "type": "string",
      "metadata": {
        "description": "Firewall IP"
      }
    },
    "cdnName": {
      "type": "string",
      "metadata":{
          "description": "The name of the App Service"
      }
    },
    "cdnSKU": {
        "type": "string",
        "defaultValue": "Standard_Microsoft",
        "allowedValues": [
            "Standard_Verizon",
            "Premium_Verizon",
            "Custom_Verizon",
            "Standard_Microsoft"
        ],
        "metadata": {
            "description": "The SKU of the search service."
        }
    }
  },
  "variables": {
    "redisTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/redis-cache.json')]",
    "appServicePlanTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/app-service-plan.json')]",
    "azureSQLTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/azure-sql.json')]",
    "databaseTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/database.json')]",
    "appInsightsTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/app-insights.json')]",
    "storageAccountTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/storage-account.json')]",
    "keyVaultTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/key-vault.json')]",
    "azureSearchTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/azure-search.json')]",
    "cdnTemplateUri": "[concat(parameters('templatesBaseUri'), 'Shared/cdn.json')]"
  },
  "resources": [
    {
      "apiVersion": "2017-05-10",
      "name": "AppServicePlan",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('appServicePlanTemplateUri')]"
        },
        "parameters": {
          "appServicePlanName": {
            "value": "[parameters('appServicePlanName')]"
          },
          "appServicePlanSku": {
            "value": "[parameters('appServicePlanSku')]"
          },
          "appServicePlanOS": {
            "value": "[parameters('appServicePlanOS')]"
          },
          "appServicePlanIsLinux": {
            "value": "[parameters('appServicePlanIsLinux')]"
          }
        }
      }
    },
    {
      "apiVersion": "2017-05-10",
      "name": "RedisCache",
      "type": "Microsoft.Resources/deployments",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('redisTemplateUri')]"
        },
        "parameters": {
          "redisCacheName": {
            "value": "[parameters('redisCacheName')]"
          },
          "redisCacheSku": {
            "value": "[parameters('redisCacheSku')]"
          }
        }
      }
    },
    {
      "name": "SQLServer",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('azureSQLTemplateUri')]"
        },
        "parameters": {
          "sqlAdministratorLogin": {
            "value": "[parameters('sqlAdministratorLogin')]"
          },
          "sqlAdministratorLoginPassword": {
            "value": "[parameters('sqlAdministratorLoginPassword')]"
          },
          "sqlserverName": {
            "value": "[parameters('sqlserverName')]"
          },
          "elasticPoolName": {
            "value": "[parameters('elasticPoolName')]"
          },
          "EPGWIP": {
            "value": "[parameters('EPGWIP')]"
          },
          "CHGWIP": {
            "value": "[parameters('CHGWIP')]"
          }
        }
      }
    },
    {
      "name": "[parameters('databaseNames')[copyIndex()]]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('databaseTemplateUri')]"
        },
        "parameters": {
          "databaseName": {
            "value": "[parameters('databaseNames')[copyIndex()]]"
          },
          "transparentDataEncryption": {
            "value": "[parameters('transparentDataEncryption')]"
          },
          "sqlserverName": {
            "value": "[parameters('sqlserverName')]"
          },
          "elasticPoolName": {
            "value": "[parameters('elasticPoolName')]"
          }
        }
      },
      "copy": {
        "name": "databasecopy",
        "count": "[length(parameters('databaseNames'))]",
        "mode": "Serial"
      },
      "dependsOn": [
        "SQLServer"
      ]
    },
    {
      "name": "AppInsights",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('appInsightsTemplateUri')]"
        },
        "parameters": {
          "appInsightsName": {
            "value": "[parameters('appInsightsName')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "name": "StorageAccount",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('storageAccountTemplateUri')]"
        },
        "parameters": {
          "storageAccountName": {
            "value": "[parameters('storageAccountName')]"
          },
          "storageAccountType": {
            "value": "[parameters('storageAccountType')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "name": "KeyVault",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('keyVaultTemplateUri')]"
        },
        "parameters": {
          "keyVaultName": {
            "value": "[parameters('keyVaultName')]"
          },
          "AccessPolicyObjectId": {
            "value": "[parameters('AccessPolicyObjectId')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "name": "AzureSearch",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('azureSearchTemplateUri')]"
        },
        "parameters": {
          "azureSearchName": {
            "value": "[parameters('azureSearchName')]"
          }
        }
      },
      "dependsOn": []
    },
    {
      "name": "CDN",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2014-04-01",
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[variables('cdnTemplateUri')]"
        },
        "parameters": {
          "cdnSKU": {
            "value": "[parameters('cdnSKU')]"
          },
          "cdnName": {
            "value": "[parameters('cdnName')]"
          }
        }
      },
      "dependsOn": []
    }
  ],
  "outputs": {}
}
{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appServiceName": {
            "type": "string",
            "metadata": {
                "description": "The name of the App Service"
            }
        },
        "appServicePlanName": {
            "type": "string",
            "metadata": {
                "description": "The name of the App Service Plan"
            }
        },
        "appServicePlanRG": {
            "type": "string",
            "metadata": {
                "description": "Resource Group where the ASP lives"
            }
        },
        "runtimeStack": {
            "type": "string",
            "metadata": {
                "description": "The name of the runtime stack for the container"
            }
        },
        "customHostName": {
            "type": "string",
            "defaultValue": ""
        },
        "certificateThumbprint": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "This can be passed into the template via the reference function: [reference(resourceId(parameters('certificateResourceGroup'), 'Microsoft.Web/certificates', parameters('certificateName')), '2016-03-01').Thumbprint]"
            }
		},
		"appServiceAppSettings": {
			"type": "array",
			"defaultValue": [
			]
		},
		"deployStagingSlot": {
			"type": "bool",
			"defaultValue": true
		},
		"azureStorageAccounts": {
			"type": "object",
			"defaultValue": {}
        },
        "subnetResourceId": {
          "type": "string",
          "defaultValue": "",
          "metadata": {
            "description": "Resource ID of the subnet used for vNet integration"
          }
        },
        "minTlsVersion": {
            "type": "string",
            "defaultValue": "1.2",
            "metadata": {
                "description": "The minimum tls version for the service"
            }
        }
    },
    "variables": {
        "appServicePlanId": "[resourceId(parameters('appServicePlanRG'), 'Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "useCustomHostname": "[greater(length(parameters('customHostname')), 0)]",
		"attachAzureStorageAccounts": "[greater(length(parameters('azureStorageAccounts')), 0)]",
		"appServiceAppSettingsProvided": "[greater(length(parameters('appServiceAppSettings')), 0)]",
		"siteConfigSettings": {
			"withAppServiceSettings": {
				"alwaysOn": true,
				"linuxFxVersion": "[parameters('runtimeStack')]",
				"appSettings": "[parameters('appServiceAppSettings')]",
                "minTlsVersion": "[parameters('minTlsVersion')]"
			},
			"withoutAppServiceSettings": {
				"alwaysOn": true,
				"linuxFxVersion": "[parameters('runtimeStack')]",
                "minTlsVersion": "[parameters('minTlsVersion')]"
			},
			"withoutLinuxFxVersion": {
				"alwaysOn": true,
                "minTlsVersion": "[parameters('minTlsVersion')]"
			}
		}
    },
    "resources": [
        {
            "type": "Microsoft.Web/sites",
            "name": "[parameters('appServiceName')]",
            "kind": "app,linux,container",
            "apiVersion": "2016-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "clientAffinityEnabled": false,
                "serverFarmId": "[variables('appServicePlanId')]",
                "siteConfig": "[if(parameters('deployStagingSlot'), variables('siteConfigSettings').withoutLinuxFxVersion, if(variables('appServiceAppSettingsProvided'), variables('siteConfigSettings').withAppServiceSettings, variables('siteConfigSettings').withoutAppServiceSettings))]"
            },
            "resources": [
                {
					"condition": "[parameters('deployStagingSlot')]",
                    "name": "staging",
                    "type": "slots",
                    "apiVersion": "2016-08-01",
                    "location": "[resourceGroup().location]",
                    "properties": {
                        "clientAffinityEnabled": false,
                        "serverFarmId": "[variables('appServicePlanId')]",
                        "siteConfig": "[if(variables('appServiceAppSettingsProvided'), variables('siteConfigSettings').withAppServiceSettings, variables('siteConfigSettings').withoutAppServiceSettings)]"
					},
					"resources": [{
							"condition": "[variables('attachAzureStorageAccounts')]",
							"name": "azureStorageAccounts",
							"type": "config",
							"apiVersion": "2018-02-01",
							"location": "[resourceGroup().location]",
							"properties": "[parameters('azureStorageAccounts')]",
							"dependsOn": [
								"staging"
							]
                        }
					],
                    "dependsOn": [
                        "[parameters('appServiceName')]"
                    ]
                }
            ]
        },
        {
            "type": "Microsoft.Web/sites/hostnameBindings",
            "condition": "[variables('useCustomHostname')]",
            "name": "[concat(parameters('appServiceName'), '/', if(variables('useCustomHostname'), parameters('customHostname'), 'placeholder'))]",
            "apiVersion": "2016-08-01",
            "location": "[resourceGroup().location]",
            "properties": {
                "sslState": "SniEnabled",
                "thumbprint": "[parameters('certificateThumbprint')]"
            },
            "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
            ]
        },
        {
          "type": "Microsoft.Web/sites/config",
          "condition": "[not(empty(parameters('subnetResourceId')))]",
          "name": "[concat(parameters('appServiceName'), '/virtualNetwork')]",
          "apiVersion": "2018-11-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "subnetResourceId": "[parameters('subnetResourceId')]",
            "swiftSupported": true
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', parameters('appServiceName'))]"
          ]
        },
        {
          "type": "Microsoft.Web/sites/slots/config",
          "condition": "[and(not(empty(parameters('subnetResourceId'))), parameters('deployStagingSlot'))]",
          "name": "[concat(parameters('appServiceName'), '/staging/virtualNetwork')]",
          "apiVersion": "2018-11-01",
          "location": "[resourceGroup().location]",
          "properties": {
            "subnetResourceId": "[parameters('subnetResourceId')]",
            "swiftSupported": true
          },
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/slots', parameters('appServiceName'), 'staging')]"
          ]
        }
    ],
	"outputs": {
		"possibleOutboundIpAddresses": {
			"type": "array",
			"value": "[split(reference(parameters('appServiceName')).possibleOutboundIpAddresses, ',')]"
		}
	}
}

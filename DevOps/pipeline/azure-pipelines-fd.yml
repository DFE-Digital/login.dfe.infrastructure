name: $(BuildDefinitionName)_tag-$(BuildID)_at-$(Date:yyyyMMdd)$(Rev:.r)
resources:
  repositories:
    - repository: devopsTemplates
      type: github
      endpoint: DfE-Digital
      name: DFE-Digital/login.dfe.devops
      ref: main

trigger: none

parameters:
  - name: shaUse
    type: boolean
    displayName: 'Use Self Host agent'
    default: true
  - name: tran
    type: boolean
    displayName: 'Transformation Deployment'
    default: false
  - name: dev
    type: boolean
    displayName: 'Dev Deployment'
    default: false
  - name: test
    type: boolean
    displayName: 'Test Deployment'
    default: false
  - name: pp
    type: boolean
    displayName: 'Pre-Prod Deployment'
    default: false
  - name: pr
    type: boolean
    displayName: 'Prod Deployment'
    default: false

variables:
  - group: dsi-global
  - group: dsi-envs-list

stages:

  # Code Scans
  - stage: scanTemplate
    displayName: "Scan tools"
    jobs:
      
      - template:  pipeline/scanTools.yml@devopsTemplates
        parameters:
          AppDeploy: false 

  - ${{ each parameter in parameters }}:
    - ${{ if and(in(parameter.key, 'tran','dev','test','pp','pr'), eq(parameter.value, 'true')) }}:
      - stage: Deployment_${{parameter.Key}}
        displayName: "Deployment [${{parameter.Key}}]"
        ${{ if eq(parameters.shaUse, 'true') }}:
          pool: $[variables['${{var.key}}ShaPool']]
        dependsOn: 
        - scanTemplate
        variables:
        - name: environmentId
          value: $[variables['${{var.key}}EnvId']]
        - name: ServConName
          value: ${{ format('{0}{1}', var.key, 'ServCon') }}
        jobs:
        - template: pipeline/frontDoor.yml@devopsTemplates
          parameters:
            serviceConnection: $(${{variables.ServConName}})
            environmentName: ${{parameter.key}}
            shaUse: ${{parameters.shaUse}}
            ${{ if eq(parameter.key, 'pr') }}:
              sslCertificateName: prod-services-signin
              isProduction: true
            ${{ else }}:
              sslCertificateName: ${{parameter.Key}}-services-signin
              isProduction: false